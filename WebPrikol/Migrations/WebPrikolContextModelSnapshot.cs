// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebPrikol.Models;

#nullable disable

namespace WebPrikol.Migrations
{
    [DbContext(typeof(WebPrikolContext))]
    partial class WebPrikolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebPrikol.Models.Buyer", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("WebPrikol.Models.Order", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuyersForigenKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductsForigenKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Quanity")
                        .HasColumnType("int");

                    b.Property<Guid?>("StaffsForigenKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Sum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuyersForigenKey");

                    b.HasIndex("ProductsForigenKey");

                    b.HasIndex("StaffsForigenKey");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebPrikol.Models.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("WebPrikol.Models.Product", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseForigenKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseForigenKey");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebPrikol.Models.Purchase", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Quanity")
                        .HasColumnType("int");

                    b.Property<int?>("Sum")
                        .HasColumnType("int");

                    b.Property<Guid?>("SupplierForigenKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SupplierForigenKey");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("WebPrikol.Models.Staff", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PositionForigenKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PositionForigenKey");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("WebPrikol.Models.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SupplierAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("WebPrikol.Models.Warehouse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WarehouseForigenKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseForigenKey");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("WebPrikol.Models.Order", b =>
                {
                    b.HasOne("WebPrikol.Models.Buyer", "Buyers")
                        .WithMany("Orders")
                        .HasForeignKey("BuyersForigenKey");

                    b.HasOne("WebPrikol.Models.Product", "Products")
                        .WithMany("Orders")
                        .HasForeignKey("ProductsForigenKey");

                    b.HasOne("WebPrikol.Models.Staff", "Staff")
                        .WithMany("Orders")
                        .HasForeignKey("StaffsForigenKey");

                    b.Navigation("Buyers");

                    b.Navigation("Products");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("WebPrikol.Models.Product", b =>
                {
                    b.HasOne("WebPrikol.Models.Purchase", "Purchase")
                        .WithMany("Products")
                        .HasForeignKey("PurchaseForigenKey");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("WebPrikol.Models.Purchase", b =>
                {
                    b.HasOne("WebPrikol.Models.Supplier", "Supplier")
                        .WithMany("Purchase")
                        .HasForeignKey("SupplierForigenKey");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("WebPrikol.Models.Staff", b =>
                {
                    b.HasOne("WebPrikol.Models.Position", "Positions")
                        .WithMany("Staffs")
                        .HasForeignKey("PositionForigenKey");

                    b.Navigation("Positions");
                });

            modelBuilder.Entity("WebPrikol.Models.Warehouse", b =>
                {
                    b.HasOne("WebPrikol.Models.Purchase", "Purchase")
                        .WithMany("Warehouse")
                        .HasForeignKey("WarehouseForigenKey");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("WebPrikol.Models.Buyer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebPrikol.Models.Position", b =>
                {
                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("WebPrikol.Models.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebPrikol.Models.Purchase", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WebPrikol.Models.Staff", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebPrikol.Models.Supplier", b =>
                {
                    b.Navigation("Purchase");
                });
#pragma warning restore 612, 618
        }
    }
}

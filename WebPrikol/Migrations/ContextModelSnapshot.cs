// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebPrikol.Models;

#nullable disable

namespace WebPrikol.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebPrikol.Models.Basket", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("PriceSumming")
                        .HasColumnType("int");

                    b.Property<int?>("ProductsForeiginKey")
                        .HasColumnType("int");

                    b.Property<int?>("UserForeiginKey")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductsForeiginKey");

                    b.HasIndex("UserForeiginKey");

                    b.HasIndex("UserId1");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("WebPrikol.Models.Product", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("ProductDescription")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductPictureURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WarehouseForeiginKey")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseForeiginKey");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebPrikol.Models.User", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UserDtoForeiginKey")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserDtoForeiginKey")
                        .IsUnique()
                        .HasFilter("[UserDtoForeiginKey] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebPrikol.Models.UserDto", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("Password")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserDto");
                });

            modelBuilder.Entity("WebPrikol.Models.Warehouse", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("ProductAmount")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("WebPrikol.Models.Basket", b =>
                {
                    b.HasOne("WebPrikol.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductsForeiginKey");

                    b.HasOne("WebPrikol.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserForeiginKey");

                    b.HasOne("WebPrikol.Models.User", null)
                        .WithMany("BasketsList")
                        .HasForeignKey("UserId1");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebPrikol.Models.Product", b =>
                {
                    b.HasOne("WebPrikol.Models.Product", null)
                        .WithMany("ProductList")
                        .HasForeignKey("ProductId");

                    b.HasOne("WebPrikol.Models.Warehouse", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseForeiginKey");

                    b.HasOne("WebPrikol.Models.Warehouse", null)
                        .WithMany("ProductsList")
                        .HasForeignKey("WarehouseId");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("WebPrikol.Models.User", b =>
                {
                    b.HasOne("WebPrikol.Models.UserDto", "UserDto")
                        .WithOne("User")
                        .HasForeignKey("WebPrikol.Models.User", "UserDtoForeiginKey");

                    b.Navigation("UserDto");
                });

            modelBuilder.Entity("WebPrikol.Models.Product", b =>
                {
                    b.Navigation("ProductList");
                });

            modelBuilder.Entity("WebPrikol.Models.User", b =>
                {
                    b.Navigation("BasketsList");
                });

            modelBuilder.Entity("WebPrikol.Models.UserDto", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("WebPrikol.Models.Warehouse", b =>
                {
                    b.Navigation("ProductsList");
                });
#pragma warning restore 612, 618
        }
    }
}
